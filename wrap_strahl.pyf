!    -*- f90 -*-
! vim: set filetype=fortran: 
! Note: the context of this file is case sensitive.

python module pystrahl ! in 
    interface  ! in :strahl
        subroutine strahl(verbose,create_rad,inp_mode,sxr_out_only,diag_only,rate_out,control_file) ! in :strahl:strahl/strahl.f
            include './strahl/strahl_config.inc'
            !include './strahl/namen.inc'
            !include './strahl/netcdf.inc'
            !include './strahl/prof_rps_common.inc'
            !include './strahl/prof_ps_common.inc'
            !include './strahl/prof_rs_common.inc' 
            !include './strahl/strahl_common.inc'

            logical :: verbose
            logical :: create_rad
            character*1 :: inp_mode
            logical :: sxr_out_only
            logical :: diag_only
            logical :: rate_out
            character*70 :: control_file
            real*8 dimension(RAP,MS) :: s
            real*8 dimension(RAP,MS) :: al
            real*8 dimension(RAP,NTIM) :: rne_t
            real*8 dimension(RAP,NTIM) :: te_t
            real*8 dimension(RAP,NTIM) :: ti_t
            real*8 dimension(RAP,NTIM) :: vdan_t
            real*8 dimension(RAP,NTIM) :: dkan_t
            real*8 dimension(RAP,NTIM) :: dv_t
            real*8 dimension(RAP,NTIM) :: h0_d_t
            real*8 dimension(NTIM) :: vesc_t
            real*8 dimension(NTIM) :: gro_t
            real*8 dimension(NTIM) :: gf_t
            real*8 dimension(RAP,MS) :: ra
            real*8 dimension(RAP,MS) :: rn
            real*8 dimension(RAP,MS) :: rtc
            real*8 dimension(NTIM) :: t_ne
            real*8 dimension(NTIM) :: t_te
            real*8 dimension(NTIM) :: t_ti
            real*8 dimension(NTIM) :: t_trans
            real*8 dimension(NTIM) :: t_h0
            real*8 dimension(MS) :: wvla
            real*8 dimension(MS) :: excenergy
            real*8 dimension(MS) :: ion
            real*8 dimension(MS) :: dwvla
            real*8 dimension(RAP,MS) :: x1
            real*8 dimension(RAP,MS) :: x2
            real*8 dimension(RAP,MS) :: x1s
            real*8 dimension(RAP,MS) :: x2s
            real*8 dimension(RAP,MS) :: x3
            real*8 dimension(NTFLX) :: t_flx
            real*8 dimension(NTFLX) :: flx_t
            integer :: n_flx
            integer :: divbls
            integer :: nt_ne
            integer :: nt_te
            integer :: nt_ti
            integer :: nt_trans
            integer :: nt_h0
            real*8 dimension(RAP,MS) :: e
            real*8 dimension(RAP,MS) :: f
            common /ratecoeff/ s,al
            common /r_prof_ps/ rne_t,te_t,ti_t,vdan_t,dkan_t,dv_t,h0_d_t,vesc_t,gro_t,gf_t
            common /impurity/ ra,rn,rtc
            common /r_prof_rps/ t_ne,t_te,t_ti,t_trans,t_h0
            common /diaglines/ wvla,excenergy,ion,dwvla
            common /radiation_coeff/ x1,x2,x1s,x2s,x3
            common /valve_real/ t_flx,flx_t
            common /valve_int/ n_flx,divbls
            common /i_prof_rps/ nt_ne,nt_te,nt_ti,nt_trans,nt_h0
            common /transport/ e,f
        end subroutine strahl
    end interface 
end python module strahl

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
